# ==============================================================================
# Kubernetes Ingress Configuration
# Secure AI Chat - External Access and Load Balancing
# ==============================================================================

# Main Application Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: secure-ai-chat-ingress
  namespace: secure-ai-chat-prod
  labels:
    app.kubernetes.io/name: secure-ai-chat
    app.kubernetes.io/component: ingress
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    
    # SSL/TLS Configuration
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-1:ACCOUNT:certificate/CERTIFICATE-ID
    
    # Security Headers
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
    
    # Health Check
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # Performance
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60,
      routing.http2.enabled=true,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=secure-ai-chat-logs,
      access_logs.s3.prefix=alb-access-logs
    
    # WAF
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:ap-northeast-1:ACCOUNT:regional/webacl/secure-ai-chat-waf/WAF-ID
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
spec:
  tls:
  - hosts:
    - secure-ai-chat.com
    - app.secure-ai-chat.com
    - api.secure-ai-chat.com
    secretName: tls-secret
  
  rules:
  # Main Application Domain
  - host: secure-ai-chat.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 8080
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
  
  # Application Subdomain
  - host: app.secure-ai-chat.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 8080
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
  
  # API Subdomain
  - host: api.secure-ai-chat.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000

---
# Tenant-specific Ingress (Wildcard)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tenant-ingress
  namespace: secure-ai-chat-prod
  labels:
    app.kubernetes.io/name: secure-ai-chat
    app.kubernetes.io/component: tenant-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-1:ACCOUNT:certificate/WILDCARD-CERTIFICATE-ID
    
    # Custom headers for tenant identification
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Tenant-Subdomain: $host";
      
spec:
  tls:
  - hosts:
    - "*.secure-ai-chat.com"
    secretName: wildcard-tls-secret
    
  rules:
  - host: "*.secure-ai-chat.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 8080
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000

---
# Monitoring Ingress (Internal)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: secure-ai-chat-prod
  labels:
    app.kubernetes.io/name: secure-ai-chat
    app.kubernetes.io/component: monitoring
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    
    # IP Whitelist (Internal network only)
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
spec:
  rules:
  - host: monitoring.internal.secure-ai-chat.com
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 9090
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000